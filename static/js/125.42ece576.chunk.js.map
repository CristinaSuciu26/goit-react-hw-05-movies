{"version":3,"file":"static/js/125.42ece576.chunk.js","mappings":"sPACA,EAAuB,sBAAvB,EAAsD,wBAAtD,EAA0F,2BAA1F,EAAkI,4B,SCiDlI,EA7CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAgB1B,OAdAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEMC,EAAAA,EAAAA,IAAkBlB,GAAS,KAAD,EAA3Cc,EAAQC,EAAAI,KACdC,QAAQC,IAAI,gBAAiBP,GAC7BP,EAAWO,GAAUC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAErBK,QAAQG,MAAM,gCAA+BR,EAAAO,IAAS,yBAAAP,EAAAS,OAAA,GAAAX,EAAA,kBAEzD,kBARiB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAUlBjB,GACF,GAAG,CAACT,KAGF2B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGvB,EAAQwB,OAAS,GAChBC,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJF,EAAAA,EAAAA,KAAA,MAAAE,SACGvB,EAAQ0B,KAAI,SAAAC,GAAM,OACjBF,EAAAA,EAAAA,MAAA,MAAoBG,UAAWC,EAAYN,SAAA,EACzCE,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAcN,SAAA,CAC3B,KACDF,EAAAA,EAAAA,KAAA,KAAGO,UAAWC,EAAkBN,SAAEI,EAAOG,aAG3CT,EAAAA,EAAAA,KAAA,KAAAE,SAAII,EAAOI,YANJJ,EAAOK,GAOX,UAKXX,EAAAA,EAAAA,KAAA,OAAKO,UAAWC,EAAiBN,SAAC,+CAM1C,C","sources":["webpack://react-homework-template/./src/pages/movie-details/reviews/Reviews.module.css?3f51","pages/movie-details/reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__jTOvw\",\"author\":\"Reviews_author__YnGtJ\",\"noReviews\":\"Reviews_noReviews__M2Ewt\",\"authorName\":\"Reviews_authorName__cI93u\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../../../services/Api';\nimport styles from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const movieReviews = async () => {\n      try {\n        const response = await fetchMovieReviews(movieId);\n        console.log('API Response:', response); // Check the response from the API\n        setReviews(response);\n      } catch (error) {\n        console.error('Error fetching movie reviews:', error);\n      }\n    };\n\n    movieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <div>\n          <h2>Movie Reviews</h2>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id} className={styles.list}>\n                <div className={styles.author}>\n                  {' '}\n                  <p className={styles.authorName}>{review.author}</p>\n                </div>\n\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <div className={styles.noReviews}>\n          We don't have any reviews for this movie.\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","movieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchMovieReviews","sent","console","log","t0","error","stop","apply","arguments","_jsx","_Fragment","children","length","_jsxs","map","review","className","styles","author","content","id"],"sourceRoot":""}