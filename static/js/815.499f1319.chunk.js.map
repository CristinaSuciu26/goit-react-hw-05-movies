{"version":3,"file":"static/js/815.499f1319.chunk.js","mappings":"sPACA,EAA4B,wBAA5B,EAA2D,mBAA3D,EAA4F,0B,SCkD5F,EA9Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAepB,OAbAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAESC,EAAAA,EAAAA,IAAelB,GAAS,KAAD,EAAxCc,EAAQC,EAAAI,KACdZ,EAAQO,GAAUC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAElBM,QAAQC,MAAKP,EAAAK,IAAQ,yBAAAL,EAAAQ,OAAA,GAAAV,EAAA,kBAExB,kBAPc,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KASfhB,GACF,GAAG,CAACT,KAGF0B,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACa,IAAhBvB,EAAKyB,SACJD,EAAAA,EAAAA,KAAA,OAAAD,SACGvB,EAAKA,KAAK0B,KAAI,SAAAC,GAAK,OAClBP,EAAAA,EAAAA,MAAA,OAAoBC,UAAWC,EAAYC,SAAA,CACxC,KACDC,EAAAA,EAAAA,KAAA,OACEI,IACED,EAAME,aAAY,kCAAAC,OACoBH,EAAME,cAAY,kCAG1DE,IAAKJ,EAAMK,iBAEbZ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,KAAAD,SAAII,EAAMM,QACVb,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,cAAYI,EAAMO,kBAZfP,EAAMQ,GAcV,MAIK,IAAhBnC,EAAKyB,SAAgBD,EAAAA,EAAAA,KAAA,OAAAD,SAAK,6CAGjC,C","sources":["webpack://react-homework-template/./src/pages/movie-details/cast/Cast.module.css?c249","pages/movie-details/cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Cast_container__bVYNr\",\"cast\":\"Cast_cast__GF7ZZ\",\"castDetails\":\"Cast_castDetails__1JRtI\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../../../services/Api';\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const response = await fetchMovieCast(movieId);\n        setCast(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    movieCast();\n  }, [movieId]);\n\n  return (\n    <div className={styles.container}>\n      <h2>Movie Cast:</h2>\n      {cast.length !== 0 && (\n        <div>\n          {cast.cast.map(actor => (\n            <div key={actor.id} className={styles.cast}>\n              {' '}\n              <img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n                    : `https://i.imgur.com/p3MsT9t.jpg`\n                }\n                alt={actor.original_name}\n              />\n              <div className={styles.castDetails}>\n                <p>{actor.name}</p>\n                <p>Character: {actor.character}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n      {cast.length === 0 && <div>We don't have any cast for this movie.</div>}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","movieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchMovieCast","sent","t0","console","error","stop","apply","arguments","_jsxs","className","styles","children","_jsx","length","map","actor","src","profile_path","concat","alt","original_name","name","character","id"],"sourceRoot":""}